{"version":3,"sources":["components/Navbar.js","components/UI/Spinner.js","components/ExerciseList.js","store/actions/exercise.js","store/actions/actionType.js","components/EditExercise.js","components/CreateExercise.js","components/CreateUser.js","store/reducers/exercise.js","store/reducers/index.js","App.js","index.js"],"names":["Navbar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Spinner","ExerciseList","this","props","onFetchExerciseData","list","loading","scope","exercises","map","exercise","key","_id","username","description","length","slice","duration","Date","date","toDateString","onClick","onDeleteExercise","href","connect","state","dispatch","axios","get","then","res","data","delete","deletedxercise","deleteExercise","EditExercise","onChangeUsername","e","setState","target","value","onChangeDescription","onChangeDuration","onChangeDate","onSubmit","preventDefault","onUpdateExercise","match","params","history","push","users","forEach","el","style","width","margin","htmlFor","ref","required","onChange","user","rows","placeholder","selected","post","console","log","updatedExercise","updateExercise","CreateExercise","onCreateExercise","createdExercise","createExercise","CreateUser","initialState","reducer","action","concat","filteredArray","filter","store","combineReducers","exerciseReducer","userReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f510687.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Navbar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <Link className=\"navbar-brand\" to=\"/\">ExerTra</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item active\">\r\n                            <Link className=\"nav-link\" to=\"/\">Exercises<span className=\"sr-only\">(current)</span></Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/create\">Create Exercise log</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/user\">Create Uses</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className='Spinner'></div>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Spinner from './UI/Spinner';\r\nimport {connect} from 'react-redux';\r\nimport {fetchExercise, deleteExercise} from '../store/actions/index';\r\n\r\n class ExerciseList extends Component {\r\n    componentDidMount(){\r\n        this.props.onFetchExerciseData()\r\n    }\r\n    render() {\r\n        // console.log(this.props.exercises)\r\n        let list = <Spinner/>;\r\n        if(!this.props.loading){\r\n            list = (<table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Username</th>\r\n                        <th scope=\"col\">Description</th>\r\n                        <th scope=\"col\">Duration</th>\r\n                        <th scope=\"col\">date</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.exercises.map(exercise => (\r\n                        <tr key={exercise._id}>\r\n                            <td>{exercise.username}</td>\r\n                            <td>{exercise.description.length >= 25 ? exercise.description.slice(0, 25) + '...' :  exercise.description}</td>\r\n                            <td>{exercise.duration}</td>\r\n                            <td>{new Date(exercise.date).toDateString()}</td>\r\n                            <td>\r\n                                <Link to={`/edit/${exercise._id}`}>edit</Link> | \r\n                                <a onClick={() => this.props.onDeleteExercise(exercise._id)} href=\"#\">delete</a>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>)\r\n        }\r\n        return (\r\n            <div> \r\n                {list}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    exercises: state.exercises.exercises,\r\n    loading: state.exercises.loading\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchExerciseData: () => dispatch(fetchExercise()),\r\n        onDeleteExercise: (id) => dispatch(deleteExercise(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExerciseList);","import { \r\n    FETCH_EXERCISES,\r\n    DELETE_EXERCISE,\r\n    START_DELETE_EXERCISE,\r\n    CREATE_EXERCISE,\r\n    UPDATE_EXERCISE\r\n } from './actionType'\r\n import axios from 'axios';\r\n\r\n export const exercise = (exercises) => {\r\n     return {\r\n         type: FETCH_EXERCISES,\r\n         exercises: exercises\r\n     }\r\n }\r\nexport const fetchExercise = () => {\r\n    return dispatch => {\r\n         axios.get('http://localhost:5000/exercises')\r\n        .then(res => dispatch(exercise(res.data)))\r\n        \r\n    }\r\n}\r\n\r\nexport const createdExercise = (exercise) => {\r\n    return {\r\n        type: CREATE_EXERCISE,\r\n        exercise: exercise\r\n    }\r\n}\r\n\r\nexport const createExercise = (exercise) => {\r\n    return dispatch => {\r\n    axios.post('http://localhost:5000/exercises/add', exercise)\r\n    .then(res => {\r\n        dispatch(createdExercise(res.data))\r\n    })\r\n    }\r\n}\r\n\r\nexport const updatedExercise = (exercise) => {\r\n    return {\r\n        type: UPDATE_EXERCISE,\r\n        exercise: exercise\r\n    }\r\n}\r\n\r\nexport  const updateExercise = (exercise, id) => {\r\n    return dispatch => {\r\n        axios.post(`http://localhost:5000/exercises/update/${id}`, exercise)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            dispatch(updatedExercise(res.data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteStartExercise = () => {\r\n    return {\r\n         type: START_DELETE_EXERCISE\r\n    }\r\n   \r\n}\r\nexport const deletedxercise = (id) => {\r\n    return {\r\n        type: DELETE_EXERCISE,\r\n        id: id\r\n    }\r\n}\r\n\r\n\r\nexport const deleteExercise = id => {\r\n    return dispatch => {\r\n        dispatch(deleteStartExercise())\r\n        axios.delete(`http://localhost:5000/exercises/${id}`)\r\n            .then(res => dispatch(deletedxercise(id)))\r\n        \r\n    }\r\n   \r\n}","export const FETCH_EXERCISES = 'FETCH_EXERCISES';\r\nexport const DELETE_EXERCISE = 'DELETE_EXERCISE';\r\nexport const START_DELETE_EXERCISE = 'START_DELETE_EXERCISE';\r\nexport const CREATE_EXERCISE = 'CREATE_EXERCISE';\r\nexport const UPDATE_EXERCISE = 'UPDATE_EXERCISE';\r\n","import React, { Component } from 'react'\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\nimport Spinner from './UI/Spinner';\r\nimport {connect} from 'react-redux'\r\nimport { updateExercise } from '../store/actions/index';\r\n\r\n class EditExercise extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            description: '',\r\n            duration: 0,\r\n            date: new Date(),\r\n            users: [],\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        axios.get(`http://localhost:5000/exercises/${this.props.match.params.id}`)\r\n        .then(res => {\r\n            this.setState({\r\n                username: res.data.username,\r\n                description: res.data.description,\r\n                duration: res.data.duration,\r\n                date: new Date(res.data.date),\r\n                loading: false\r\n            })\r\n        })\r\n\r\n        axios.get('http://localhost:5000/users')\r\n        .then(res => {\r\n            const users = []\r\n            res.data.forEach(el => users.push({id: el._id, username: el.username}))\r\n            this.setState({users: users})\r\n            // console.log(users)\r\n        })\r\n    }\r\n\r\n    onChangeUsername = (e) => {\r\n        this.setState({\r\n            username: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDescription = (e) => {\r\n        this.setState({\r\n            description: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDuration = (e) => {\r\n        this.setState({\r\n            duration: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDate = (date) => {\r\n        this.setState({\r\n            date: date\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const exercise = {\r\n            username: this.state.username,\r\n            description: this.state.description,\r\n            duration: this.state.duration,\r\n            date: this.state.date,\r\n        }\r\n        // console.log(exercise)\r\n        this.props.onUpdateExercise(exercise, this.props.match.params.id)\r\n        this.props.history.push('/'); \r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state)\r\n        let exercise = <Spinner/>\r\n        if(!this.state.loading){\r\n            exercise = (\r\n                <>\r\n                <h3 className=\"text-center\">Edit exercise log</h3>\r\n                 <form onSubmit = {this.onSubmit} style={{width: '60%', margin: '0 auto'}}>\r\n                \r\n                 <div className=\"form-group\">\r\n                     <label htmlFor=\"exampleFormControlSelect1\">Select name</label>\r\n                     <select \r\n                         className=\"form-control\" \r\n                         id=\"exampleFormControlSelect1\" \r\n                         ref=\"userInput\"\r\n                         required\r\n                         value={this.state.username}\r\n                         onChange={this.onChangeUsername}\r\n                         >\r\n                         {this.state.users.map(user => (\r\n                             <option\r\n                                 key={user.id}\r\n                                 value={user.username}>\r\n                                 {user.username}\r\n                             </option>\r\n                         ))}\r\n                     </select>\r\n                 </div>\r\n     \r\n                 <div className=\"form-group\">\r\n                     <label htmlFor=\"exampleFormControlTextarea1\">Description</label>\r\n                     <textarea \r\n                         className=\"form-control\" \r\n                         id=\"exampleFormControlTextarea1\" rows=\"3\"\r\n                         value={this.state.description}\r\n                         onChange={this.onChangeDescription}>\r\n                         \r\n                     </textarea>\r\n                 </div>\r\n     \r\n                 <div className=\"form-group\">\r\n                     <label htmlFor=\"exampleFormControlInput2\">Duration in (Minutes)</label>\r\n                     <input \r\n                         type=\"text\"\r\n                         className=\"form-control\" \r\n                         id=\"exampleFormControlInput2\" \r\n                         placeholder=\"duration\"\r\n                         value={this.state.duration}\r\n                         onChange={this.onChangeDuration}/>\r\n                 </div>\r\n     \r\n               \r\n               \r\n                 <div className=\"form-group\">\r\n                     <label htmlFor=\"exampleFormControlInput3\">Date</label>\r\n                     <br/>\r\n                       <DatePicker\r\n                       selected={this.state.date}\r\n                       onChange={(date) => this.onChangeDate(date)}/>\r\n                     \r\n                 </div>\r\n                 <button type=\"submit\" className=\"btn btn-primary\">Edit Exercise Log</button>\r\n                 </form>\r\n                </>\r\n            )\r\n        }\r\n        return exercise\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onUpdateExercise: (exercise, id) =>  dispatch(updateExercise(exercise, id))\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(EditExercise);","import React, { Component } from 'react'\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\nimport Spinner from './UI/Spinner';\r\nimport {connect} from 'react-redux';\r\nimport {createExercise} from '../store/actions/index';\r\n\r\nclass CreateExercise extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            description: '',\r\n            duration: 0,\r\n            date: new Date(),\r\n            users: [],\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        axios.get('http://localhost:5000/users')\r\n        .then(res => {\r\n            const users = []\r\n            res.data.forEach(el => users.push({id: el._id, username: el.username}))\r\n            this.setState({users: users, loading: false})\r\n            // console.log(users)\r\n        })\r\n    }\r\n\r\n    onChangeUsername = (e) => {\r\n        this.setState({\r\n            username: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDescription = (e) => {\r\n        this.setState({\r\n            description: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDuration = (e) => {\r\n        this.setState({\r\n            duration: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDate = (date) => {\r\n        this.setState({\r\n            date: date\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const exercise = {\r\n            username: this.state.username,\r\n            description: this.state.description,\r\n            duration: this.state.duration,\r\n            date: this.state.date,\r\n        }\r\n        // console.log(exercise)\r\n        this.props.onCreateExercise(exercise)\r\n        // window.location = '/'; \r\n        this.props.history.push('/')\r\n    }\r\n\r\n\r\n    render() {\r\n        // console.log(this.state)\r\n        let creatExercise = this.state.loading ? <Spinner/> : (\r\n            <>\r\n            <h3 className=\"text-center\">Create new exercise log</h3>\r\n                <form onSubmit = {this.onSubmit} style={{width: '60%', margin: '0 auto'}}>\r\n            \r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleFormControlSelect1\">Select name</label>\r\n                    <select \r\n                        className=\"form-control\" \r\n                        id=\"exampleFormControlSelect1\" \r\n                        ref=\"userInput\"\r\n                        required\r\n                        value={this.state.username}\r\n                        onChange={this.onChangeUsername}\r\n                        >\r\n                        {this.state.users.map(user => (\r\n                            <option\r\n                                key={user.id}\r\n                                value={user.username}>\r\n                                {user.username}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleFormControlTextarea1\">Description</label>\r\n                    <textarea \r\n                        className=\"form-control\" \r\n                        id=\"exampleFormControlTextarea1\" rows=\"3\"\r\n                        value={this.state.description}\r\n                        onChange={this.onChangeDescription}>\r\n                        \r\n                    </textarea>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleFormControlInput2\">Duration in (Minutes)</label>\r\n                    <input \r\n                        type=\"text\"\r\n                        className=\"form-control\" \r\n                        id=\"exampleFormControlInput2\" \r\n                        placeholder=\"duration\"\r\n                        value={this.state.duration}\r\n                        onChange={this.onChangeDuration}/>\r\n                </div>\r\n\r\n            \r\n            \r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleFormControlInput3\">Date</label>\r\n                    <br/>\r\n                    <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={(date) => this.onChangeDate(date)}/>\r\n                    \r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Create Exercise Log</button>\r\n                </form>\r\n           </>\r\n        )\r\n        return creatExercise\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onCreateExercise: (exercise) => dispatch(createExercise(exercise))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateExercise);","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport Spinner from './UI/Spinner';\r\n\r\nexport default class CreateUser extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            loading: false\r\n           \r\n        }\r\n    }\r\n\r\n    onChangeUsername = (e) => {\r\n        this.setState({\r\n            username: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        const user = {\r\n            username: this.state.username,\r\n        }\r\n        console.log(user)\r\n        axios.post('http://localhost:5000/users/add', user)\r\n            .then(res => {\r\n                console.log(res)\r\n                this.setState({username: '', loading: false})\r\n            })\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n       \r\n        let createUser = this.state.loading ? <Spinner/> :(\r\n            <>\r\n            <h3 className=\"text-center\">Create new exercise log</h3>\r\n            <form onSubmit = {this.onSubmit} style={{width: '60%', margin: '0 auto'}}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleFormControlInput2\">Username</label>\r\n                    <input \r\n                        type=\"text\"\r\n                        className=\"form-control\" \r\n                        id=\"exampleFormControlInput2\" \r\n                        placeholder=\"username\"\r\n                        value={this.state.username}\r\n                        onChange={this.onChangeUsername}/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>         \r\n            </form>\r\n           </>)\r\n        return createUser\r\n    }\r\n}\r\n","\r\nimport {\r\n    FETCH_EXERCISES,\r\n    DELETE_EXERCISE,\r\n    START_DELETE_EXERCISE,\r\n    CREATE_EXERCISE,\r\n    UPDATE_EXERCISE\r\n} from '../actions/actionType';\r\n\r\nconst initialState = {\r\n    exercises: [],\r\n    loading: true\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case FETCH_EXERCISES:\r\n            return {\r\n                ...state,\r\n                exercises: action.exercises,\r\n                loading: false\r\n            };\r\n        case CREATE_EXERCISE:\r\n            return {\r\n                ...state,\r\n                exercises: state.exercises.concat(action.exercise),\r\n                loading: false\r\n            };\r\n         case UPDATE_EXERCISE:\r\n             const filteredArray = [...state.exercises].filter(el => el._id !== action.exercise._id)\r\n             filteredArray.push(action.exercise)\r\n             console.log(filteredArray)\r\n            return {\r\n                ...state,\r\n                exercises: filteredArray,\r\n                loading: false\r\n            };\r\n           \r\n        case DELETE_EXERCISE:\r\n            return {\r\n                ...state,\r\n                exercises: state.exercises.filter(el => el._id !== action.id),\r\n                loading: false\r\n            };\r\n          case START_DELETE_EXERCISE:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default :\r\n            return state\r\n        \r\n    }\r\n}\r\n\r\nexport default reducer;","import {combineReducers} from 'redux';\r\n\r\nimport exerciseReducer from './exercise';\r\nimport userReducer from './exercise';\r\n\r\nconst store = combineReducers({\r\n    exercises: exerciseReducer,\r\n    user: userReducer\r\n})\r\n\r\nexport default store;","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n// Import All Component;\nimport ExerciseList from './components/ExerciseList';\nimport EditExercise from './components/EditExercise';\nimport CreateExercise from './components/CreateExercise';\nimport CreateUser from './components/CreateUser';\n\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport thunk from 'redux-thunk';\nimport {Provider} from 'react-redux';\nimport rootReducer from './store/reducers/index'\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Navbar  />\n          <div className=\"container\">\n            <Route path=\"/\" exact component={ExerciseList} />\n            <Route path=\"/edit/:id\" exact component={EditExercise} />\n            <Route path=\"/create\" exact component={CreateExercise} />\n            <Route path=\"/user\" exact component={CreateUser} />\n        </div>\n      </Router>\n    </Provider>\n    \n   \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}